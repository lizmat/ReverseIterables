=begin pod

=head1 NAME

ReverseIterables - turn two or more Iterables into a single iterator reversing

=head1 SYNOPSIS

=begin code :lang<raku>

use ReverseIterables;

my @a = ^5;
my @b = <a b c d e>;
my @c = ReverseIterables.new(@a,@b).Seq;
say @c;  # [e d c b a 4 3 2 1]

=end code

=head1 DESCRIPTION

The C<ReverseIterables> distribution provides a C<ReverseIterables>
class that creates a single C<Iterator> from any number C<Iterables>
that will B<lazily> produce values in a "reverse" order (from the
end of the last C<Iterable>, to the start of the first C<Iterable>).

It does B<not> recurse into any C<Iterable> values that it
encounters.

It also provides a C<Seq> method, to directly produce a C<Seq> object
from the iterator, so it can be used in expressions.

=head1 PROBABLY NOT USER FACING

This module is probably more useful for module developers, than for
people writing direct Raku production code.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/ReverseIterables .
Comments and Pull Requests are welcome.

If you like this module, or what I'm doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2025 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
